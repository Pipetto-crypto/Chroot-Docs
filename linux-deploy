#!/bin/bash

CONFIG=/data/user/0/ru.meefik.linuxdeploy/files/config/linux.conf
USERNAME=$(sudo cat $CONFIG | awk -F '"|"' '/USER_NAME/{print $2}')
CHROOT_DIR=/data/local/mnt
INTERNAL_STORAGE=/sdcard
DEPLOY=/data/user/0/ru.meefik.linuxdeploy/files/bin/linuxdeploy

if [ -n "$(sudo ls -A /mnt/media_rw)" ]
then
	EXTERNAL_STORAGE=/mnt/media_rw/$(sudo ls /mnt/media_rw)
else
	EXTERNAL_STORAGE=""
fi 

ARG1=$1
ARG2=$2

#This function contains the commands required to start the Xwayland socket in the chroot.

xwayland(){

echo "Creating the socket"

sudo mkdir -p $CHROOT_DIR/tmp/runtime-$USERNAME
sudo $DEPLOY shell -u $USERNAME sudo chown $USERNAME:$USERNAME /tmp/runtime-$USERNAME
sudo ln -sf $CHROOT_DIR/tmp/runtime-$USERNAME $PREFIX/xwayland
sudo chmod 777 $PREFIX/xwayland
XDG_RUNTIME_DIR=$PREFIX/xwayland taskset -c 4-7 termux-x11 &  
pid=$!  #the following three commands are not necessary, they just kill termux-x11 in termux so it is possible to access the server without opening a new terminal window
sleep 15
kill $pid
sudo chmod 755 $CHROOT_DIR/tmp/runtime-$USERNAME
sudo chmod 777 $PREFIX/xwayland/wayland-0

}


sparkle(){


if [ ! -f "$CHROOT_DIR/bin/sparkle" ]
then	
	echo "Installing sparkle script"
	curl https://raw.githubusercontent.com/Pipetto-crypto/Chroot-Docs/main/sparkle/sparkle.sh > sparkle.sh
	sudo mv sparkle.sh $CHROOT_DIR/bin/sparkle
	sudo chmod a+x $CHROOT_DIR/bin/sparkle
fi

echo "Binding sparkle private directory into the chroot"
sudo mount --bind /data/data/com.sion.sparkle/files $CHROOT_DIR/sparkle


}

update(){

echo -e "\nMounting the container"

su -c $DEPLOY start -m

echo -e "\nCopying all scripts in the home directory"

sudo rm -rf $CHROOT_DIR/home/$USERNAME/scripts
sudo mkdir -p $CHROOT_DIR/home/$USERNAME/scripts
wget https://raw.githubusercontent.com/Pipetto-crypto/Chroot-Docs/main/setup/install_box.sh
wget https://raw.githubusercontent.com/Pipetto-crypto/Chroot-Docs/main/setup/install_vnc.sh
wget https://raw.githubusercontent.com/Pipetto-crypto/Chroot-Docs/main/setup/setup_env.sh
sudo mv install_box.sh install_vnc.sh setup_env.sh $CHROOT_DIR/home/$USERNAME/scripts
sudo chmod -R 777 $CHROOT_DIR/home/$USERNAME/scripts

echo -e "\nUpdate the linux-deploy script"

wget https://raw.githubusercontent.com/Pipetto-crypto/Chroot-Docs/main/linux-deploy
chmod +x linux-deploy
mv linux-deploy $PATH

echo -e "\nUnmounting the container"

su -c $DEPLOY stop -u

}

start(){

	echo -e "\nInitializing audio server before startup"
		pulseaudio --start --exit-idle-time=-1
		pacmd load-module module-native-protocol-tcp auth-ip-acl=127.0.0.1

	echo -e "\nStarting the chroot"
		su -c $DEPLOY start -m

	echo -e "\nBinding internal storage"
        #This is not required if you are using proot-distro
        sudo mkdir -p $CHROOT_DIR/media/internal_storage
		sudo bindfs -o perms=a+rwx -o nonempty $INTERNAL_STORAGE $CHROOT_DIR/media/internal_storage

		if [ "$EXTERNAL_STORAGE" != "" ]
		then
			echo -e "\nBinding external storage"
			sudo mkdir -p $CHROOT_DIR/media/external_sd
			sudo bindfs -o perms=a+rwx -o nonempty $EXTERNAL_STORAGE $CHROOT_DIR/media/external_sd
		else
			echo -e "\nSD card is not present, won't mount external storage"
		fi
	

	if [ -d /proc/sys/fs/binfmt_misc ]
	then
		echo -e "\nLoading binfmts entries"
		su -c $DEPLOY shell -u $USERNAME "sudo update-binfmts --enable > /dev/null 2>&1"
	else 
		echo "Binfmt support not detected, skipping loading of binfmt entries"
	fi
	
	
	if [ "$ARG2" = "-w" ]
	then
		xwayland #calls the xwayland function after starting the chroot

	elif [ "$ARG2" = "-s" ]
	then
		sparkle
		echo "Starting the Xwayland server in the chroot through the script"
		su -c $DEPLOY shell -u $USERNAME sparkle
	fi
	
	echo -e "\nAll preparations completed, connecting now\n"
	ssh $USERNAME@localhost


}

stop(){

pid=$(sudo pidof com.termux.x11)
if [ "$pid" != "" ];
then
	sudo kill $pid
fi
su -c $DEPLOY  stop -u
if [ -d $PREFIX/xwayland ]
then
	echo "Deleting stale symlinks and files"
	sudo rm -rf $PREFIX/xwayland/wayland-0
	rm $PREFIX/xwayland
fi


}

help(){

echo -e "\nA basic script to integrate Linux-Deploy with Termux. It launches your linux chroots with audio, internal and external storage and a X server to use with Termux:X11 or Sparkle"
echo -e "\nOptions:\n"
echo -e "\nstart - Launches the chroot, run -w option to start the Xwayland server with Termux-X11 or -s for Sparkle"
echo "stop -  Stops the chroot"
echo "restart - Restart the chroot, you can use same options as the start command"
echo "update - Updates this wrapper and downloads useful installation scripts inside the chroot"
echo -e "help -  Print this help page\n"

}

while [ True ];
do
	
	if [ "$ARG1" = "stop" ]
	then
		stop
		break
	elif [ "$ARG1" = "start" ]
        then    
		if [ -d $CHROOT_DIR/home ]
		then
			echo "Chroot already mounted, connecting"
			ssh $USERNAME@localhost
		else 
			start
		fi
		break
	elif [ "$ARG1" = "restart" ]
	then
		stop
		start
		break
	elif [ "$ARG1" = "update" ]
	then
		update
		break
	elif [ "$ARG1" = "help" ]
	then
		help
		break
    else 
		echo -e "\nNo option specified\n"
		help
        break
	fi	

done


